//buildscript {
//	repositories {
//		mavenCentral()
//	}
//	dependencies {
//		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.0.0.2929"
//	}
//}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.0.0.2929"
}

group = 'com.study.opensearch'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// OpenSearch
	implementation 'org.opensearch.client:opensearch-rest-high-level-client:2.3.0'

	// SpringBatch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	implementation 'org.apache.commons:commons-lang3:3.0'
	implementation 'com.googlecode.json-simple:json-simple:1.1'
}


// sonarqube config
sonar {
	properties {
		property "sonar.host.url", "http://192.168.0.47:8001/"
		property "sonar.login", "squ_61eb9fb977b50bc3ae92cac21db0a89eb92b303f"
		property "sonar.sources", "src"
		property "sonar.language", "java"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.profile", "Sonar way"
		property "sonar.test.inclusions", "**/*Test.java"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
